
≤
mojo/db/config.protoô// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db;

import "mojo/core/time.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db;db";
option java_multiple_files = true;
option java_outer_classname = "ConfigProto";
option java_package = "org.mojolang.mojo.db";

message Config {
    string driver = 1;
    string dsn = 2;
    bool debug = 3;
    int32 max_idle_connections = 4;
    int32 max_open_connections = 5;
    mojo.core.Duration connection_keep_alive = 6;
    mojo.core.Duration slow_log_threshold = 7;
    bool enable_metric = 8;
    bool enable_trace = 9;
    bool enable_detail_sql = 10;
    bool enable_log_access = 11;
    bool enable_log_access_request = 12;
    bool enable_log_access_response = 13;
    bool disable_auto_migrate = 20;
}
à
mojo/db/delete_time.protoÍ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db;

import "mojo/core/time.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db;db";
option java_multiple_files = true;
option java_outer_classname = "DeleteTimeProto";
option java_package = "org.mojolang.mojo.db";

message DeleteTime {
    mojo.core.Timestamp val = 1;
}
ç
%mojo/db/sql/access_control_stmt.proto„// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "AccessControlStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message AccessControlStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
}
Ñ
"mojo/db/sql/alter_table_stmt.proto›// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "AlterTableStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message AlterTableStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
}
¨
mojo/db/sql/analyze_stmt.protoâ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "AnalyzeStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message AnalyzeSmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    string schema_name = 10;
    string name = 11;
}
Î
$mojo/db/sql/as_subquery_clause.proto¬// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/clause.proto";
import "mojo/db/sql/sql.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "AsSubqueryClauseProto";
option java_package = "org.mojolang.mojo.db.sql";

message AsSubqueryClause {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    SelectStmt subquery = 10;
}
˜
mojo/db/sql/attach_stmt.proto’// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "AttachStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message AttachStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
}
π
mojo/db/sql/begin_stmt.protoò// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "BeginStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message BeginStmt {
    enum Type {
        TYPE_UNSPECIFIED=0;
        TYPE_DEFERRED=1;
        TYPE_IMMEDIATE=2;
        TYPE_EXCLUSIVE=3;
    }

    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    Type type = 10;
    bool transaction = 11;
    string name = 12;
}
∑
,mojo/db/sql/binary_string_literal_expr.protoÜ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "BinaryStringLiteralExprProto";
option java_package = "org.mojolang.mojo.db.sql";

message BinaryStringLiteralExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    string value = 20;
}
π
%mojo/db/sql/bind_parameter_expr.protoè// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "BindParameterExprProto";
option java_package = "org.mojolang.mojo.db.sql";

message BindParameterExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    int32 index = 10;
    string name = 11;
}
˙
&mojo/db/sql/boolean_literal_expr.protoœ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "BooleanLiteralExprProto";
option java_package = "org.mojolang.mojo.db.sql";

enum Boolean {
    BOOLEAN_FALSE=0;
    BOOLEAN_TRUE=1;
    BOOLEAN_UNKNOWN=2;
}

message BooleanLiteralExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    Boolean value = 20;
}
‹
mojo/db/sql/check_clause.protoπ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/clause.proto";
import "mojo/db/sql/sql.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "CheckClauseProto";
option java_package = "org.mojolang.mojo.db.sql";

message CheckClause {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    Expression condition = 10;
}
Í
mojo/db/sql/clause.protoÕ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "ClauseProto";
option java_package = "org.mojolang.mojo.db.sql";

message Clause {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
}
π
 mojo/db/sql/collate_clause.protoî// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/clause.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "CollateClauseProto";
option java_package = "org.mojolang.mojo.db.sql";

message CollateClause {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    string name = 10;
}
∑
#mojo/db/sql/column_constraint.protoè// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/check_clause.proto";
import "mojo/db/sql/clause.proto";
import "mojo/db/sql/collate_clause.proto";
import "mojo/db/sql/conflict_clause.proto";
import "mojo/db/sql/foreign_key_clause.proto";
import "mojo/db/sql/order.proto";
import "mojo/db/sql/sql.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "ColumnConstraintProto";
option java_package = "org.mojolang.mojo.db.sql";

message ColumnConstraint {
    message PrimaryKey {
        Order order = 1;
        ConflictClause conflict = 2;
        bool auto_increment = 3;
    }

    message NotNull {
        mojo.lang.Position start_position = 1;
        mojo.lang.Position end_position = 2;
        int64 kind = 4;
        bool implicit = 5;
        ConflictClause.Action action = 10;
    }

    message Unique {
        mojo.lang.Position start_position = 1;
        mojo.lang.Position end_position = 2;
        int64 kind = 4;
        bool implicit = 5;
        ConflictClause.Action action = 10;
    }

    message Default {
        Expression expression = 2;
    }

    string name = 1;
    oneof constraint {
        PrimaryKey primary_key = 2;
        NotNull not_null = 3;
        Unique unique = 4;
        CheckClause check_clause = 5;
        Default default = 6;
        CollateClause collate_clause = 7;
        ForeignKeyClause foreign_key_clause = 8;
    }
}
ö
#mojo/db/sql/column_definition.protoÚ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/column_constraint.proto";
import "mojo/db/sql/data_type.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "ColumnDefinitionProto";
option java_package = "org.mojolang.mojo.db.sql";

message ColumnDefinition {
    string name = 1;
    DataType type = 2;
    repeated ColumnConstraint constraints = 3;
}
‚
'mojo/db/sql/column_reference_expr.proto∂// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "ColumnReferenceExprProto";
option java_package = "org.mojolang.mojo.db.sql";

message ColumnReferenceExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    string schema_name = 10;
    string table_name = 11;
    string name = 15;
}
∑
mojo/db/sql/commit_stmt.protoï// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/end_stmt.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "CommitStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message CommitStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    bool transaction = 10;
}
Û
&mojo/db/sql/comparison_predicate.proto»// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "ComparisonPredicateProto";
option java_package = "org.mojolang.mojo.db.sql";

message ComparisonPredicate {
}
‘
!mojo/db/sql/conflict_clause.protoÆ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/clause.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "ConflictClauseProto";
option java_package = "org.mojolang.mojo.db.sql";

message ConflictClause {
    enum Action {
        ACTION_ROLLBACK=0;
        ACTION_ABORT=1;
        ACTION_FAIL=2;
        ACTION_IGNORE=3;
        ACTION_REPLACE=4;
    }

    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    Action action = 10;
}
∏
#mojo/db/sql/create_index_stmt.protoê// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/data_definition_stmt.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "CreateIndexStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message CreateIndexStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
}
®
mojo/db/sql/create_stmt.protoÜ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/data_definition_stmt.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "CreateStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message CreateStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
}
ñ
#mojo/db/sql/create_table_stmt.protoÓ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/as_subquery_clause.proto";
import "mojo/db/sql/create_stmt.proto";
import "mojo/db/sql/data_definition_stmt.proto";
import "mojo/db/sql/sql.proto";
import "mojo/db/sql/table_definition.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "CreateTableStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message CreateTableStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    bool if_not_exists = 10;
    TableName table_name = 11;
    oneof definition {
        TableDefinition table_definition = 14;
        AsSubqueryClause as_subquery_clause = 15;
    }
}
œ
%mojo/db/sql/create_trigger_stmt.proto•// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/create_stmt.proto";
import "mojo/db/sql/data_definition_stmt.proto";
import "mojo/db/sql/trigger_name.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "CreateTriggerStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message CreateTriggerStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    bool if_not_exists = 10;
    TriggerName trigger_name = 11;
}
ö
"mojo/db/sql/create_view_stmt.protoÛ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/create_stmt.proto";
import "mojo/db/sql/data_definition_stmt.proto";
import "mojo/db/sql/sql.proto";
import "mojo/db/sql/view_name.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "CreateViewStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message CreateViewStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    bool if_not_exists = 10;
    ViewName view_name = 11;
    repeated string columns = 13;
    SelectStmt query = 14;
}
ˆ
+mojo/db/sql/create_virtual_table_stmt.proto∆// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/create_stmt.proto";
import "mojo/db/sql/data_definition_stmt.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "CreateVirtualTableStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message CreateVirtualTableStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
}
ê
&mojo/db/sql/data_definition_stmt.protoÂ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "DataDefinitionStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message DataDefinitionStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
}
ñ
(mojo/db/sql/data_manipulation_stmt.protoÈ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "DataManipulationStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message DataManipulationStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
}
’
%mojo/db/sql/data_set_quantifier.proto´// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "DataSetQuantifierProto";
option java_package = "org.mojolang.mojo.db.sql";

enum DataSetQuantifier {
    DATA_SET_QUANTIFIER_UNSPECIFIED=0;
    DATA_SET_QUANTIFIER_DISTINCT=1;
    DATA_SET_QUANTIFIER_ALL=2;
}
Á
mojo/db/sql/data_type.proto«// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "DataTypeProto";
option java_package = "org.mojolang.mojo.db.sql";

message DataType {
    string name = 1;
}
ò
 mojo/db/sql/defer_strategy.protoÛ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "DeferStrategyProto";
option java_package = "org.mojolang.mojo.db.sql";

message DeferStrategy {
    enum Strategy {
        STRATEGY_UNSPECIFIED=0;
        STRATEGY_INITIALLY_DEFERRED=1;
        STRATEGY_INITIALLY_IMMEDIATE=2;
    }

    bool not = 1;
    Strategy strategy = 2;
}
™
mojo/db/sql/delete_stmt.protoà// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/data_manipulation_stmt.proto";
import "mojo/db/sql/qualified_table_name.proto";
import "mojo/db/sql/returning_clause.proto";
import "mojo/db/sql/sql.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "DeleteStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message DeleteStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    WithClause with = 10;
    QualifiedTableName table_name = 11;
    WhereClause where = 12;
    ReturningClause returning = 15;
}
˜
mojo/db/sql/detach_stmt.proto’// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "DetachStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message DetachStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
}
´
mojo/db/sql/dialect.protoç// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "DialectProto";
option java_package = "org.mojolang.mojo.db.sql";

enum Dialect {
    DIALECT_UNSPECIFIED=0;
    DIALECT_SQLITE=1;
    DIALECT_MYSQL=2;
    DIALECT_POSTGRESQL=3;
}
Ò
mojo/db/sql/drop_stmt.proto—// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "DropStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message DropStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
}
â
mojo/db/sql/end_stmt.protoÍ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "EndStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message EndStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    bool transaction = 10;
}
ò
$mojo/db/sql/float_literal_expr.protoÔ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "FloatLiteralExprProto";
option java_package = "org.mojolang.mojo.db.sql";

message FloatLiteralExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    bool is_negative = 20;
    double value = 30;
    int64 integral_part = 35;
    int64 fractional_part = 36;
    int64 exponent_part = 37;
}
ˇ	
$mojo/db/sql/foreign_key_clause.proto÷	// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/clause.proto";
import "mojo/db/sql/defer_strategy.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "ForeignKeyClauseProto";
option java_package = "org.mojolang.mojo.db.sql";

message ForeignKeyClause {
    enum MatchType {
        MATCH_TYPE_UNSPECIFIED=0;
        MATCH_TYPE_SIMPLE=1;
        MATCH_TYPE_PARTIAL=2;
        MATCH_TYPE_FULL=3;
    }

    message TriggerAction {
        enum Trigger {
            TRIGGER_UPDATED=0;
            TRIGGER_DELETED=1;
        }

        enum Action {
            ACTION_CASCADE=0;
            ACTION_SET_NULL=1;
            ACTION_SET_DEFAULT=2;
            ACTION_RESTRICT=3;
            ACTION_NO_ACTION=4;
        }

        Trigger trigger = 1;
        Action action = 2;
    }

    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    string table = 10;
    repeated string columns = 11;
    MatchType match = 12;
    TriggerAction action = 13;
    DeferStrategy defer_strategy = 15;
}
ü
!mojo/db/sql/identifier_expr.proto˘// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "IdentifierExprProto";
option java_package = "org.mojolang.mojo.db.sql";

message IdentifierExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    string identifier = 10;
}
‚
 mojo/db/sql/indexed_column.protoΩ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/collate_clause.proto";
import "mojo/db/sql/order.proto";
import "mojo/db/sql/sql.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "IndexedColumnProto";
option java_package = "org.mojolang.mojo.db.sql";

message IndexedColumn {
    oneof name {
        string mojo_core_string = 1;
        Expression expression = 2;
    }
    CollateClause collate = 5;
    Order order = 6;
}
•	
mojo/db/sql/insert_stmt.protoÉ	// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/data_manipulation_stmt.proto";
import "mojo/db/sql/into_clause.proto";
import "mojo/db/sql/returning_clause.proto";
import "mojo/db/sql/sql.proto";
import "mojo/db/sql/upsert_clause.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "InsertStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message InsertStmt {
    enum Type {
        TYPE_INSERT=0;
        TYPE_REPLACE=1;
        TYPE_INSERT_OR_REPLACE=5;
        TYPE_INSERT_OR_ROLLBACK=6;
        TYPE_INSERT_OR_ABORT=7;
        TYPE_INSERT_OR_FAIL=8;
        TYPE_INSERT_OR_IGNORE=9;
    }

    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    WithClause with = 10;
    Type type = 11;
    IntoClause into = 12;
    oneof values {
        ValuesClause values_clause = 13;
        SelectStmt select_stmt = 14;
    }
    UpsertClause upsert = 15;
    ReturningClause returning = 16;
}
¬
&mojo/db/sql/integer_literal_expr.protoó// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "IntegerLiteralExprProto";
option java_package = "org.mojolang.mojo.db.sql";

message IntegerLiteralExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    bool is_negative = 20;
    uint64 value = 16;
}
˚
mojo/db/sql/into_clause.protoŸ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/clause.proto";
import "mojo/db/sql/sql.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "IntoClauseProto";
option java_package = "org.mojolang.mojo.db.sql";

message IntoClause {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    TableName table_name = 10;
    repeated string columns = 11;
}
á
#mojo/db/sql/null_literal_expr.protoﬂ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "NullLiteralExprProto";
option java_package = "org.mojolang.mojo.db.sql";

message NullLiteralExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
}
Å
mojo/db/sql/order.protoÂ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "OrderProto";
option java_package = "org.mojolang.mojo.db.sql";

enum Order {
    ORDER_UNSPECIFIED=0;
    ORDER_ASC=1;
    ORDER_DESC=2;
}
Ç
mojo/db/sql/over_clause.proto‡// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/clause.proto";
import "mojo/db/sql/partition_clause.proto";
import "mojo/db/sql/sql.proto";
import "mojo/db/sql/window.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "OverClauseProto";
option java_package = "org.mojolang.mojo.db.sql";

message OverClause {
    string name = 10;
    PartitionClause partition = 13;
    OrderByClause order_by = 14;
    Window.Frame frame = 15;
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
}
Û
"mojo/db/sql/partition_clause.protoÃ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/clause.proto";
import "mojo/db/sql/sql.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "PartitionClauseProto";
option java_package = "org.mojolang.mojo.db.sql";

message PartitionClause {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    repeated Expression expressions = 10;
}
˜
mojo/db/sql/pragma_stmt.proto’// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "PragmaStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message PragmaStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
}
Û
mojo/db/sql/predicate.proto”// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "PredicateProto";
option java_package = "org.mojolang.mojo.db.sql";

message Predicate {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
}
É
!mojo/db/sql/procedural_stmt.proto›// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "ProceduralStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message ProceduralStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
}
Â
&mojo/db/sql/qualified_table_name.proto∫// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "QualifiedTableNameProto";
option java_package = "org.mojolang.mojo.db.sql";

message QualifiedTableName {
    string schema = 1;
    string name = 2;
    string alias = 3;
    string indexed = 5;
    bool not_indexed = 6;
}
Ú
%mojo/db/sql/raise_function_expr.proto»// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";
import "mojo/mojo.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "RaiseFunctionExprProto";
option java_package = "org.mojolang.mojo.db.sql";

message RaiseFunctionExpr {
    enum Action {
        ACTION_IGNORE=0;
        ACTION_ROLLBACK=1;
        ACTION_ABORT=2;
        ACTION_FAIL=3;
    }

    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    Action action = 11;
    string error_message = 12 [(mojo.db_ignore)=true];
}
˙
mojo/db/sql/reindex_stmt.proto◊// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "ReindexStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message ReindexStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
}
˙
mojo/db/sql/release_stmt.proto◊// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "ReleaseStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message ReleaseStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
}
Î
"mojo/db/sql/returning_clause.protoƒ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/clause.proto";
import "mojo/db/sql/sql.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "ReturningClauseProto";
option java_package = "org.mojolang.mojo.db.sql";

message ReturningClause {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    repeated Column columns = 10;
}
¥
mojo/db/sql/rollback_stmt.protoê// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "RollbackStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message RollbackStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    bool transaction = 10;
    string save_point = 11;
}
¿
mojo/db/sql/set_clause.protoü// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/clause.proto";
import "mojo/db/sql/sql.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "SetClauseProto";
option java_package = "org.mojolang.mojo.db.sql";

message ColumnAssignment {
    repeated string columns = 1;
    Expression value = 2;
}

message SetClause {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    repeated ColumnAssignment assignments = 10;
}
÷
mojo/db/sql/source_file.proto¥// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/statement.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "SourceFileProto";
option java_package = "org.mojolang.mojo.db.sql";

message SourceFile {
    string name = 1;
    string full_name = 2;
    repeated Statement statements = 12;
}
Ï\
mojo/db/sql/sql.proto“\// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/binary_string_literal_expr.proto";
import "mojo/db/sql/bind_parameter_expr.proto";
import "mojo/db/sql/boolean_literal_expr.proto";
import "mojo/db/sql/clause.proto";
import "mojo/db/sql/column_reference_expr.proto";
import "mojo/db/sql/data_manipulation_stmt.proto";
import "mojo/db/sql/data_set_quantifier.proto";
import "mojo/db/sql/data_type.proto";
import "mojo/db/sql/float_literal_expr.proto";
import "mojo/db/sql/identifier_expr.proto";
import "mojo/db/sql/integer_literal_expr.proto";
import "mojo/db/sql/null_literal_expr.proto";
import "mojo/db/sql/order.proto";
import "mojo/db/sql/predicate.proto";
import "mojo/db/sql/raise_function_expr.proto";
import "mojo/db/sql/string_literal_expr.proto";
import "mojo/db/sql/value_expr.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "SqlProto";
option java_package = "org.mojolang.mojo.db.sql";

message BetweenExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    bool not = 10;
    Expression target = 11;
    Expression from = 13;
    Expression to = 14;
}

message BinaryExpr {
    enum Operator {
        OPERATOR_UNSPECIFIED=0;
        OPERATOR_PLUS=1;
        OPERATOR_MINUS=2;
        OPERATOR_MUL=3;
        OPERATOR_DIV=4;
        OPERATOR_MOD=5;
        OPERATOR_LT=10;
        OPERATOR_GT=11;
        OPERATOR_LTE=12;
        OPERATOR_GTE=13;
        OPERATOR_EQUAL=14;
        OPERATOR_NOT_EQUAL=15;
        OPERATOR_AND=20;
        OPERATOR_OR=21;
        OPERATOR_BIT_AND=25;
        OPERATOR_BIT_OR=26;
        OPERATOR_BIT_XOR=27;
        OPERATOR_CONCAT=30;
        OPERATOR_EXTENDED=99;
    }

    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    Operator operator = 10;
    string operator_symbol = 11;
    int32 operator_precedence = 12;
    Expression left_argument = 15;
    Expression right_argument = 16;
}

message CaseExpr {
    message Branch {
        Expression when = 1;
        Expression then = 2;
    }

    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    Expression condition = 10;
    repeated Branch branches = 11;
    Expression else = 12;
}

message CastExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    Expression value = 10;
    DataType target = 11;
}

message Column {
    oneof column {
        AllColumn all_column_val = 1;
        DerivedColumn derived_column_val = 2;
    }
}

message AllColumn {
    string table_name = 1;
}

message DerivedColumn {
    Expression expr = 1;
    string as = 2;
}

message CompoundSelect {
    enum Operator {
        OPERATOR_UNSPECIFIED=0;
        OPERATOR_UNION=1;
        OPERATOR_INTERSECT=2;
        OPERATOR_EXCEPT=3;
    }

    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    WithClause with = 10;
    oneof select {
        SelectClause select_clause = 11;
        CompoundSelect compound_select = 12;
    }
    ValuesClause values = 13;
    FromClause from = 14;
    WhereClause where = 15;
    GroupByClause group_by = 16;
    HavingClause having = 17;
    OrderByClause order_by = 20;
    LimitClause limit = 21;
    Operator operator = 30;
    CompoundSelect left = 31;
    CompoundSelect right = 32;
}

message ExistsExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    bool not = 10;
    bool exists = 11;
    SelectStmt subquery = 15;
}

message Expression {
    oneof expression {
        NullLiteralExpr null_literal_expr = 1;
        BooleanLiteralExpr boolean_literal_expr = 2;
        IntegerLiteralExpr integer_literal_expr = 3;
        FloatLiteralExpr float_literal_expr = 4;
        StringLiteralExpr string_literal_expr = 5;
        BinaryStringLiteralExpr binary_string_literal_expr = 6;
        IdentifierExpr identifier_expr = 7;
        BindParameterExpr bind_parameter_expr = 10;
        ColumnReferenceExpr column_reference_expr = 11;
        UnaryExpr unary_expr = 15;
        BinaryExpr binary_expr = 17;
        BetweenExpr between_expr = 18;
        InExpr in_expr = 19;
        CaseExpr case_expr = 20;
        CastExpr cast_expr = 21;
        FunctionCallExpr function_call_expr = 22;
        ExistsExpr exists_expr = 23;
        IsExpr is_expr = 24;
        GlobExpr glob_expr = 25;
        LikeExpr like_expr = 26;
        MatchExpr match_expr = 27;
        RegexpExpr regexp_expr = 28;
        NullExpr null_expr = 30;
        RaiseFunctionExpr raise_function_expr = 31;
        SubqueryExpr subquery_expr = 35;
        Expressions expressions = 40;
        ParenthesizedExpr parenthesized_expr = 41;
    }
}

message Expressions {
    repeated Expression vals = 1;
}

message FromClause {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    repeated Table tables = 10;
    JoinClause join = 11;
}

message FunctionCallExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    string callee = 11;
    repeated Expression arguments = 21;
}

message GlobExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    bool not = 10;
    Expression value = 11;
    Expression pattern = 12;
    Expression escape = 14;
}

message GroupByClause {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    repeated Expression expressions = 10;
}

message HavingClause {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    Expression expression = 10;
}

message InExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    bool not = 10;
    Expression target = 11;
    oneof in {
        SelectStmt select_stmt = 15;
        Expressions expressions = 16;
        TableName table_name = 17;
        TableFunctionName table_function_name = 18;
    }
}

message IsExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    bool not = 10;
    Expression target = 11;
    Expression argument = 15;
}

message JoinClause {
    enum Operator {
        OPERATOR_UNSPECIFIED=0;
    }

    message Constraint {
        int64 v = 1;
    }

    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    Table table = 10;
    Operator operator = 15;
    JoinClause left = 16;
    JoinClause right = 17;
    Constraint constraint = 18;
}

message LikeExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    bool not = 10;
    Expression value = 11;
    Expression pattern = 12;
    Expression escape = 14;
}

message LimitClause {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    Expression rows = 10;
    oneof offset {
        Expression expression = 11;
        OffsetClause offset_clause = 12;
    }
}

message MatchExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    bool not = 10;
    Expression value = 11;
    Expression pattern = 12;
    Expression escape = 14;
}

message NullExpr {
    enum Operator {
        OPERATOR_IS_NULL=0;
        OPERATOR_NOT_NULL=1;
    }

    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    Operator operator = 10;
    string operator_symbol = 11;
    Expression argument = 12;
}

message OffsetClause {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    Expression value = 10;
}

message OrderByClause {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    repeated Ordering orderings = 10;
}

message Ordering {
    Expression expression = 1;
    string collation = 2;
    Order order = 3;
    bool nulls_first = 5;
    bool nulls_last = 6;
}

message ParenthesizedExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    Expression expression = 10;
}

message RegexpExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    bool not = 10;
    Expression value = 11;
    Expression pattern = 12;
    Expression escape = 14;
}

message SelectClause {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    DataSetQuantifier quantifier = 10;
    repeated Column columns = 12;
}

message SelectStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    WithClause with = 10;
    oneof select {
        SelectClause select_clause = 11;
        CompoundSelect compound_select = 12;
    }
    ValuesClause values = 13;
    FromClause from = 14;
    WhereClause where = 15;
    GroupByClause group_by = 16;
    HavingClause having = 17;
    OrderByClause order_by = 20;
    LimitClause limit = 21;
}

message SubqueryExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    SelectStmt query = 11;
}

message Table {
    oneof table {
        TableName table_name_val = 1;
        TableFunctionName table_function_name_val = 2;
        TableQuery table_query_val = 3;
    }
}

message TableName {
    string schema_name = 10;
    string name = 13;
    string alias = 15;
}

message TableFunctionName {
    string schema_name = 10;
    string name = 13;
    repeated Expression arguments = 14;
    string alias = 15;
}

message TableQuery {
    SelectStmt query = 10;
    string alias = 15;
}

message UnaryExpr {
    enum Operator {
        OPERATOR_UNSPECIFIED=0;
        OPERATOR_MINUS=1;
        OPERATOR_PLUS=2;
        OPERATOR_TILDE=3;
        OPERATOR_NOT=4;
        OPERATOR_BIT_NOT=5;
        OPERATOR_EXTENDED=99;
    }

    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    Operator operator = 10;
    string operator_symbol = 11;
    Expression argument = 12;
}

message ValuesClause {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    repeated Expression values = 10;
}

message WhereClause {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    Expression expression = 10;
}

message TemporaryTable {
    string name = 1;
    repeated string columns = 2;
    SelectStmt subquery = 3;
}

message WithClause {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    repeated TemporaryTable tables = 10;
    bool recursive = 15;
}
˙
mojo/db/sql/statement.proto⁄// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/alter_table_stmt.proto";
import "mojo/db/sql/analyze_stmt.proto";
import "mojo/db/sql/attach_stmt.proto";
import "mojo/db/sql/begin_stmt.proto";
import "mojo/db/sql/commit_stmt.proto";
import "mojo/db/sql/create_index_stmt.proto";
import "mojo/db/sql/create_table_stmt.proto";
import "mojo/db/sql/create_trigger_stmt.proto";
import "mojo/db/sql/create_view_stmt.proto";
import "mojo/db/sql/create_virtual_table_stmt.proto";
import "mojo/db/sql/delete_stmt.proto";
import "mojo/db/sql/detach_stmt.proto";
import "mojo/db/sql/drop_stmt.proto";
import "mojo/db/sql/end_stmt.proto";
import "mojo/db/sql/insert_stmt.proto";
import "mojo/db/sql/pragma_stmt.proto";
import "mojo/db/sql/reindex_stmt.proto";
import "mojo/db/sql/release_stmt.proto";
import "mojo/db/sql/rollback_stmt.proto";
import "mojo/db/sql/sql.proto";
import "mojo/db/sql/update_stmt.proto";
import "mojo/db/sql/vacuum_stmt.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "StatementProto";
option java_package = "org.mojolang.mojo.db.sql";

message Statement {
    oneof statement {
        AlterTableStmt alter_table_stmt = 1;
        AnalyzeSmt analyze_smt = 2;
        AttachStmt attach_stmt = 3;
        BeginStmt begin_stmt = 5;
        CommitStmt commit_stmt = 6;
        CreateIndexStmt create_index_stmt = 10;
        CreateTableStmt create_table_stmt = 11;
        CreateTriggerStmt create_trigger_stmt = 12;
        CreateViewStmt create_view_stmt = 13;
        CreateVirtualTableStmt create_virtual_table_stmt = 14;
        DeleteStmt delete_stmt = 17;
        DetachStmt detach_stmt = 18;
        DropStmt drop_stmt = 19;
        EndStmt end_stmt = 30;
        InsertStmt insert_stmt = 20;
        PragmaStmt pragma_stmt = 21;
        ReindexStmt reindex_stmt = 22;
        ReleaseStmt release_stmt = 23;
        RollbackStmt rollback_stmt = 24;
        SelectStmt select_stmt = 25;
        UpdateStmt update_stmt = 26;
        VacuumStmt vacuum_stmt = 27;
    }
}
§
%mojo/db/sql/string_literal_expr.proto˙// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "StringLiteralExprProto";
option java_package = "org.mojolang.mojo.db.sql";

message StringLiteralExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
    string value = 20;
}
ö
"mojo/db/sql/table_constraint.protoÛ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/check_clause.proto";
import "mojo/db/sql/conflict_clause.proto";
import "mojo/db/sql/foreign_key_clause.proto";
import "mojo/db/sql/indexed_column.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "TableConstraintProto";
option java_package = "org.mojolang.mojo.db.sql";

message TableConstraint {
    message PrimaryKey {
        repeated IndexedColumn columns = 2;
        ConflictClause conflict = 3;
    }

    message Unique {
        repeated IndexedColumn columns = 2;
        ConflictClause conflict = 3;
    }

    message ForeignKey {
        repeated string columns = 1;
        ForeignKeyClause clause = 2;
    }

    string name = 1;
    oneof constraint {
        PrimaryKey primary_key = 2;
        Unique unique = 3;
        ForeignKey foreign_key = 4;
        CheckClause check_clause = 5;
    }
}
ò
"mojo/db/sql/table_definition.protoÒ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/column_definition.proto";
import "mojo/db/sql/table_constraint.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "TableDefinitionProto";
option java_package = "org.mojolang.mojo.db.sql";

message TableDefinition {
    repeated ColumnDefinition columns = 1;
    TableConstraint table_constraint = 2;
}
ÿ
mojo/db/sql/table_scope.proto∂// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "TableScopeProto";
option java_package = "org.mojolang.mojo.db.sql";

message TableScope {
}
•
-mojo/db/sql/transaction_management_stmt.protoÛ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "TransactionManagementStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message TransactionManagementStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
}
•
mojo/db/sql/trigger_name.protoÇ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "TriggerNameProto";
option java_package = "org.mojolang.mojo.db.sql";

message TriggerName {
    string schema_name = 10;
    string name = 13;
    string alias = 15;
}
†
mojo/db/sql/update_clause.proto¸// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/clause.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "UpdateClauseProto";
option java_package = "org.mojolang.mojo.db.sql";

message UpdateClause {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
}
Í
mojo/db/sql/update_stmt.proto»// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/data_manipulation_stmt.proto";
import "mojo/db/sql/qualified_table_name.proto";
import "mojo/db/sql/returning_clause.proto";
import "mojo/db/sql/set_clause.proto";
import "mojo/db/sql/sql.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "UpdateStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message UpdateStmt {
    enum Type {
        TYPE_UPDATE=0;
        TYPE_UPDATE_OR_REPLACE=5;
        TYPE_UPDATE_OR_ROLLBACK=6;
        TYPE_UPDATE_OR_ABORT=7;
        TYPE_UPDATE_OR_FAIL=8;
        TYPE_UPDATE_OR_IGNORE=9;
    }

    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    WithClause with = 10;
    Type type = 11;
    QualifiedTableName table_name = 12;
    SetClause set = 13;
    FromClause from = 14;
    WhereClause where = 15;
    ReturningClause returning = 16;
}
ß
mojo/db/sql/upsert_clause.protoÉ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/clause.proto";
import "mojo/db/sql/indexed_column.proto";
import "mojo/db/sql/set_clause.proto";
import "mojo/db/sql/sql.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "UpsertClauseProto";
option java_package = "org.mojolang.mojo.db.sql";

message UpsertClause {
    message Conflict {
        repeated IndexedColumn columns = 1;
        WhereClause where = 2;
    }

    message UpdateSet {
        repeated ColumnAssignment assignments = 1;
        WhereClause where = 2;
    }

    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    Conflict conflict = 10;
    UpdateSet update_set = 11;
}
è
mojo/db/sql/vacuum_stmt.protoÌ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "VacuumStmtProto";
option java_package = "org.mojolang.mojo.db.sql";

message VacuumStmt {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    string schema = 10;
}
Ù
mojo/db/sql/value_expr.proto”// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "ValueExprProto";
option java_package = "org.mojolang.mojo.db.sql";

message ValueExpr {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int32 kind = 4;
    bool implicit = 5;
}
ú
mojo/db/sql/view_name.proto¸// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "ViewNameProto";
option java_package = "org.mojolang.mojo.db.sql";

message ViewName {
    string schema_name = 10;
    string name = 13;
    string alias = 15;
}
ë
mojo/db/sql/window.protoÙ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/partition_clause.proto";
import "mojo/db/sql/sql.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "WindowProto";
option java_package = "org.mojolang.mojo.db.sql";

message Window {
    message Frame {
        message Bound {
            Expression expression = 1;
            bool preceding = 5;
            bool following = 6;
        }

        string type = 1;
        Bound lower_bound = 2;
        Bound upper_bound = 3;
        bool exclude = 5;
        bool exclude_no_others = 6;
        bool current_row = 7;
        bool group = 8;
        bool ties = 9;
    }

    string name = 10;
    PartitionClause partition = 13;
    OrderByClause order_by = 14;
    Frame frame = 15;
}
Â
mojo/db/sql/window_clause.proto¡// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db.sql;

import "mojo/db/sql/clause.proto";
import "mojo/db/sql/window.proto";
import "mojo/lang/lang.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db/sql;sql";
option java_multiple_files = true;
option java_outer_classname = "WindowClauseProto";
option java_package = "org.mojolang.mojo.db.sql";

message WindowClause {
    mojo.lang.Position start_position = 1;
    mojo.lang.Position end_position = 2;
    int64 kind = 4;
    bool implicit = 5;
    repeated Window windows = 10;
}
”
mojo/db/uni_record.proto∂// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.db;

import "mojo/core/id.proto";
import "mojo/core/time.proto";
import "mojo/core/value.proto";
import "mojo/db/delete_time.proto";
import "mojo/mojo.proto";

option go_package = "github.com/mojo-lang/db/go/pkg/mojo/db;db";
option java_multiple_files = true;
option java_outer_classname = "UniRecordProto";
option java_package = "org.mojolang.mojo.db";

message UniRecord {
    mojo.core.Id id = 1;
    mojo.core.Object data = 2 [(mojo.db_json)=true];
    mojo.core.Timestamp create_time = 5;
    mojo.core.Timestamp update_time = 6;
    DeleteTime delete_time = 7;
    string table_name = 10 [(mojo.db_ignore)=true];
}