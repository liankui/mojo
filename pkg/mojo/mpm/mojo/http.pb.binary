
∑
mojo/http/cookie.protoú// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.http;

import "mojo/core/time.proto";

option go_package = "github.com/mojo-lang/http/go/pkg/mojo/http;http";
option java_multiple_files = true;
option java_outer_classname = "CookieProto";
option java_package = "org.mojo-lang.mojo.http";

enum SameSite {
    SAME_SITE_UNSEPECIFIED=0;
    SAME_SITE_LAX=1;
    SAME_SITE_STRICT=2;
    SAME_SITE_NONE=3;
}

message Cookie {
    string name = 1;
    string value = 2;
    string path = 3;
    string domain = 4;
    mojo.core.Timestamp expires = 5;
    int32 max_age = 6;
    bool secure = 7;
    bool http_only = 8;
    SameSite same_site = 9;
}
ù
mojo/http/headers.protoÅ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.http;

import "mojo/core/boxed.proto";

option go_package = "github.com/mojo-lang/http/go/pkg/mojo/http;http";
option java_multiple_files = true;
option java_outer_classname = "HeadersProto";
option java_package = "org.mojo-lang.mojo.http";

message Headers {
    map<string, mojo.core.StringValues> vals = 1;
}
í
mojo/http/method.proto˜// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.http;

option go_package = "github.com/mojo-lang/http/go/pkg/mojo/http;http";
option java_multiple_files = true;
option java_outer_classname = "MethodProto";
option java_package = "org.mojo-lang.mojo.http";

enum Method {
    METHOD_UNSEPECIFIED=0;
    METHOD_GET=1;
    METHOD_POST=2;
    METHOD_PUT=3;
    METHOD_PATCH=4;
    METHOD_DELETE=5;
    METHOD_OPTIONS=6;
    METHOD_HEAD=7;
    METHOD_TRACE=8;
    METHOD_CONNECT=9;
}
Í
mojo/http/request.protoŒ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.http;

import "mojo/core/time.proto";
import "mojo/core/url.proto";
import "mojo/core/value.proto";
import "mojo/http/headers.proto";
import "mojo/http/method.proto";
import "mojo/http/version.proto";

option go_package = "github.com/mojo-lang/http/go/pkg/mojo/http;http";
option java_multiple_files = true;
option java_outer_classname = "RequestProto";
option java_package = "org.mojo-lang.mojo.http";

message Request {
    Method method = 1;
    mojo.core.Url url = 2;
    Version version = 3;
    Headers headers = 4;
    mojo.core.Value body = 5;
}

message RequestOptions {
    mojo.core.Duration timeout = 1;
    int32 max_retries = 2;
}
∫
mojo/http/response.protoù// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.http;

import "mojo/core/value.proto";
import "mojo/http/headers.proto";
import "mojo/http/status.proto";
import "mojo/http/version.proto";

option go_package = "github.com/mojo-lang/http/go/pkg/mojo/http;http";
option java_multiple_files = true;
option java_outer_classname = "ResponseProto";
option java_package = "org.mojo-lang.mojo.http";

message Response {
    Version version = 1;
    Status status = 2;
    Headers headers = 4;
    mojo.core.Value body = 5;
}
•
mojo/http/router.protoä// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.http;

import "mojo/core/template_string.proto";
import "mojo/http/method.proto";
import "mojo/http/template_header.proto";

option go_package = "github.com/mojo-lang/http/go/pkg/mojo/http;http";
option java_multiple_files = true;
option java_outer_classname = "RouterProto";
option java_package = "org.mojo-lang.mojo.http";

message Router {
    mojo.core.TemplateString path = 1;
    repeated TemplateHeader headers = 2;
    Method method = 10;
}
Ú
mojo/http/status.proto◊// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.http;

option go_package = "github.com/mojo-lang/http/go/pkg/mojo/http;http";
option java_multiple_files = true;
option java_outer_classname = "StatusProto";
option java_package = "org.mojo-lang.mojo.http";

message Status {
    int32 code = 1;
    string reason = 2;
}
»
mojo/http/template_header.proto§// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.http;

import "mojo/core/template_string.proto";

option go_package = "github.com/mojo-lang/http/go/pkg/mojo/http;http";
option java_multiple_files = true;
option java_outer_classname = "TemplateHeaderProto";
option java_package = "org.mojo-lang.mojo.http";

message TemplateHeader {
    string name = 1;
    mojo.core.TemplateString value = 2;
}
Ù
mojo/http/version.protoÿ// Code generated by mojo. DO NOT EDIT.

syntax = "proto3";

package mojo.http;

option go_package = "github.com/mojo-lang/http/go/pkg/mojo/http;http";
option java_multiple_files = true;
option java_outer_classname = "VersionProto";
option java_package = "org.mojo-lang.mojo.http";

message Version {
    int32 major = 1;
    int32 minor = 2;
}