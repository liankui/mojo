// Code generated by mojo. DO NOT EDIT.
// Rerunning mojo will overwrite this file.{{if IsMojoPackage .PackageName}}
//
// Copyright 2021 Mojo-lang.org
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.{{end}}

package {{.GoPackageName}}

import (
    "database/sql/driver"
    "fmt"
    "reflect"
)

// Value Implement driver.Valuer and sql.Scanner interfaces on {{.FullName}}
func (x *{{.FullName}}) Value() (driver.Value, error) {
    if x != nil {
        return x.Format(), nil
    }
    return nil, nil
}

func (x *{{.FullName}}) Scan(src interface{}) error {
    if v := reflect.ValueOf(src); !v.IsValid() || (v.CanAddr() && v.IsNil()) {
        return nil
    }

    switch cs := src.(type) {
    case []byte:
        return x.Parse(string(cs))
    case string:
        return x.Parse(cs)
    default:
        return fmt.Errorf("could not not Decode type %T -> %T", src, x)
    }
    return nil
}

func (x *{{.FullName}}) GormDataType() string {
    return "string"
}

